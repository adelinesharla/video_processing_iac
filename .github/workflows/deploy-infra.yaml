name: Deploy Infrastructure

on:
  push:
    branches:
      - main

env:
  REGION_DEFAULT: "us-east-1"
  PROJECT_NAME: "video-processor"
  TERRAFORM_STATE_BUCKET: "terraform-state-video-processor"
  LAMBDA_BUCKET: "lambda-artifacts-video-processor"

jobs:
  terraform:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.REGION_DEFAULT }}

      - name: Create Lambda Artifacts Bucket if not exists
        run: |
          aws s3api head-bucket --bucket ${{ env.LAMBDA_BUCKET }} 2>/dev/null || \
          aws s3 mb s3://${{ env.LAMBDA_BUCKET }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ./terraform

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TERRAFORM_STATE_BUCKET }}" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="region=${{ env.REGION_DEFAULT }}"
        working-directory: ./terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./terraform
        env:
          TF_VAR_project_name: ${{ env.PROJECT_NAME }}
          TF_VAR_environment: production
          TF_VAR_aws_region: ${{ env.REGION_DEFAULT }}
          TF_VAR_lambda_bucket: ${{ env.LAMBDA_BUCKET }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform